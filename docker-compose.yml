version: '3.8'

services:

  rethinkdb:
    image: rethinkdb:2.4
    ports:
      - "8080:8080"
      - "28015:28015"
    volumes:
      - rethinkdb_data:/apps/rethinkdb/data
#  rabbitmq:
#    image: rabbitmq:3.11.15-management
#    hostname: rabbitmq
#    environment:
#      - RABBITMQ_DEFAULT_USER=justatom
#      - RABBITMQ_DEFAULT_PASS=fate
#    ports:
#      - 15672:15672
#      - 5672:5672
#    restart: always
#    volumes:
#      - rabbitmqdb:/var/lib/rabbitmq
#  redis:
#    image: redis:latest
#    volumes:
#      - ./redis.conf:/redis.conf
#    ports:
#      - '6379:6379'
#    command: [ "redis-server", "/redis.conf" ]

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data
  rabbitmq_whoosh:
    container_name: rabbitmq_whoosh
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    build:
      context: .
      dockerfile: Dockerfile
      target: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
      - 15674:15674
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 10s
      start_period: 1s
      retries: 5
  celery:
    container_name: celery
    restart: always
    build:
      context: .
    command: celery -A tasks worker --loglevel=INFO
    volumes:
      - .:/app
    ports:
      - 5000:5000
    depends_on:
      rabbitmq_whoosh:
        condition: service_healthy
      rethinkdb:
        condition: service_started
      redis:
        condition: service_started

  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
      target: python
    ports:
      - 3000:3000
    depends_on:
      celery:
        condition: service_started

volumes:
  rethinkdb_data: null
  rabbitmq_data: null
  redis: null
  celery: null